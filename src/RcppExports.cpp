// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// bySum
DataFrame bySum(List ffValues, List ffBins);
RcppExport SEXP _FeatureExtraction_bySum(SEXP ffValuesSEXP, SEXP ffBinsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type ffValues(ffValuesSEXP);
    Rcpp::traits::input_parameter< List >::type ffBins(ffBinsSEXP);
    rcpp_result_gen = Rcpp::wrap(bySum(ffValues, ffBins));
    return rcpp_result_gen;
END_RCPP
}
// byMax
DataFrame byMax(List ffValues, List ffBins);
RcppExport SEXP _FeatureExtraction_byMax(SEXP ffValuesSEXP, SEXP ffBinsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type ffValues(ffValuesSEXP);
    Rcpp::traits::input_parameter< List >::type ffBins(ffBinsSEXP);
    rcpp_result_gen = Rcpp::wrap(byMax(ffValues, ffBins));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FeatureExtraction_bySum", (DL_FUNC) &_FeatureExtraction_bySum, 2},
    {"_FeatureExtraction_byMax", (DL_FUNC) &_FeatureExtraction_byMax, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_FeatureExtraction(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
